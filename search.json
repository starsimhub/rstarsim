[{"path":"https://r.starsim.org/articles/advanced.html","id":"advanced-usage-example","dir":"Articles","previous_headings":"","what":"Advanced usage example","title":"Advanced usage","text":"example illustrates creating custom disease module. translation Starsim’s Diseases developer tutorial R.","code":"# Pull out the commands for generating the plots  library(starsim) load_starsim()  # Create a new class for an SEIR disease SEIR <- PyClass(\"SEIR\",    inherit = ss$SIR, # Inherit from the SIR class   defs = list(`__module__` = \"SEIR\",      # Define the __init__ method     `__init__` = function(self, pars = py_none(), ...) {       ss$SIR$`__init__`(self) # Call the parent init method        # Parameters specific to SEIR: duration of exposure       self$define_pars(           dur_exp = ss$lognorm_ex(0.5),       )       self$update_pars(pars, ...)        # Additional states beyond the SIR ones       self$define_states(           ss$State('exposed', label='Exposed'),           ss$FloatArr('ti_exposed', label='TIme of exposure'),       )       return(py_none())     },      # Make all the updates from the SEIR model     step_state = function(self) {         ss$SIR$step_state(self) # Perform SIR updates          # Additional updates: progress exposed -> infected         infected <- self$exposed & (self$ti_infected <= self$ti)         self$exposed[infected] = FALSE         self$infected[infected] = TRUE         return(py_none())     },      # Ensure that exposed is set to False for people who die     step_die = function(self, uids) {       ss$SIR$step_die(self, uids) # Perform SIR updates       self$exposed[uids] = FALSE       return(py_none())     },      # Carry out state changes associated with infection     set_prognoses = function(self, uids, sources = py_none()) {       ss$SIR$set_prognoses(self, uids, sources) # Perform SIR updates              # Define handling of exposure       ti <- self$ti       self$susceptible[uids] = FALSE       self$exposed[uids] = TRUE       self$ti_exposed[uids] = ti        # Calculate and schedule future outcomes       dur_exp <- self$pars['dur_exp']$rvs(uids)       self$ti_infected[uids] <- ti + dur_exp       dur_inf <- self$pars['dur_inf']$rvs(uids)       will_die <- self$pars['p_death']$rvs(uids)       self$ti_recovered[uids[!will_die]] <- ti + dur_inf[!will_die]       self$ti_dead[uids[will_die]] <- ti + dur_inf[will_die]        # Update result count of new infections       new_inf <- self$results['new_infections']       new_inf[self$ti] = new_inf[self$ti] + length(uids)       return(py_none())     },      # Plot results using ggplot     plot = function(self) {       library(ggplot2)       df <- self$results$to_df()        fig <- ggplot(df, aes(timevec)) +          geom_line(aes(y = n_susceptible, colour = \"Susceptible\")) +          geom_line(aes(y = n_exposed, colour = \"Exposed\")) +         geom_line(aes(y = n_infected, colour = \"Infected\")) +         geom_line(aes(y = n_recovered, colour = \"Recovered\"))              print(fig)       return(fig)     }   ) )  # Run and plot seir <- SEIR() sim <- ss$Sim(diseases=seir, networks='random') sim$run() sim$diseases$seir$plot()"},{"path":"https://r.starsim.org/articles/install.html","id":"installing-starsim","dir":"Articles","previous_headings":"","what":"Installing Starsim","title":"Installation","text":"Installing Starsim straightforward, whether Python reticulate already configured computer. Install devtools haven’t already: Install R-Starsim package. installs R wrapper Starsim, Starsim yet. Load wrapper: Finally, install Starsim . step also install Python (specifically Miniconda) needed, create virtual environment (r-reticulate) unless already exists. Note step may take time (3-10 min depending computer internet connection). can test install ss$demo(), run sim plot results.","code":"install.packages(\"devtools\") devtools::install_github(\"starsimhub/rstarsim\") library(starsim) init_starsim() load_starsim() ss$demo()"},{"path":"https://r.starsim.org/articles/simple.html","id":"simple-usage-example","dir":"Articles","previous_headings":"","what":"Simple usage example","title":"Simple usage","text":"example walks steps creating running simple Starsim simulation. , “simple” means configuring (.e., setting parameters ) existing Starsim modules, rather writing new ones.","code":""},{"path":"https://r.starsim.org/articles/simple.html","id":"load-starsim","dir":"Articles","previous_headings":"Simple usage example","what":"Load Starsim","title":"Simple usage","text":"starsim package contains three functions – init_starsim(), reinstall_starsim(), load_starsim(). first one need , second one might need , third one access Starsim’s functionality: “Pythonic” experience, can everything via ss variable, corresponds import starsim ss Python. However, “R-ish” experience, can also use important classes directly, can also accessed via ss. example, sim <- ss$Sim() sim <- Sim() identical. ease use, Starsim also imports several key reticulate functions, including import PyClass.","code":"library(starsim) load_starsim()"},{"path":"https://r.starsim.org/articles/simple.html","id":"configure-a-starsim-run","dir":"Articles","previous_headings":"Simple usage example","what":"Configure a Starsim run","title":"Simple usage","text":"Starsim simulations can configured either supplying list parameter values, list objects. two approaches equivalent. simple sims, ’s usually easiest use parameter values. complex sims, ’s usually easiest use objects. ’s looks like configure sim using list parameter values: ’s identical simulation, configured using objects:","code":"pars <- list(   n_agents = 10000,   birth_rate = 20,   death_rate = 15,   networks = list(     type = 'randomnet',     n_contacts = 4   ),   diseases = list(     type = 'sir',     dur_inf = 10,     beta = 0.1   ) ) n_agents <- 10000 births <- ss$Births(birth_rate=20) deaths <- ss$Deaths(death_rate=15) random <- ss$RandomNet(n_contacts=4) sir <- ss$SIR(dur_inf=10, beta=0.1)"},{"path":"https://r.starsim.org/articles/simple.html","id":"create-and-run-a-sim","dir":"Articles","previous_headings":"Simple usage example","what":"Create and run a sim","title":"Simple usage","text":"create sim using parameters, can simply supply argument: valid parameter name (e.g. networks) can also supplied directly sim. “object sim” look like : Now, let’s run sims confirm match: Let’s check results two sims match:","code":"sim <- Sim(pars) sim2 <- Sim(   label = 'Objects',   n_agents = n_agents,   demographics = c(births, deaths),   networks = random,   diseases = sir ) sim$run() sim2$run()  #> Initializing sim with 10000 agents #>   Running 2000.0 ( 0/51) (0.00 s)  ———————————————————— 2% #>   Running 2010.0 (10/51) (0.08 s)  ••••———————————————— 22% #>   Running 2020.0 (20/51) (0.17 s)  ••••••••———————————— 41% #>   Running 2030.0 (30/51) (0.24 s)  ••••••••••••———————— 61% #>   Running 2040.0 (40/51) (0.31 s)  ••••••••••••••••———— 80% #>   Running 2050.0 (50/51) (0.39 s)  •••••••••••••••••••• 100% #> Sim(n=10000; 2000—2050; networks=randomnet; demographics=births, deaths; diseases=sir) #>  #> Initializing sim \"Objects\" with 10000 agents #>   Running \"Objects\": 2000.0 ( 0/51) (0.00 s)  ———————————————————— 2% #>   Running \"Objects\": 2010.0 (10/51) (0.07 s)  ••••———————————————— 22% #>   Running \"Objects\": 2020.0 (20/51) (0.15 s)  ••••••••———————————— 41% #>   Running \"Objects\": 2030.0 (30/51) (0.23 s)  ••••••••••••———————— 61% #>   Running \"Objects\": 2040.0 (40/51) (0.30 s)  ••••••••••••••••———— 80% #>   Running \"Objects\": 2050.0 (50/51) (0.38 s)  •••••••••••••••••••• 100% #> Sim(Objects; n=10000; 2000—2050; networks=randomnet; demographics=births, deaths; diseases=sir) ss$check_sims_match(sim, sim2) #> Sims match"},{"path":"https://r.starsim.org/articles/simple.html","id":"built-in-plotting","dir":"Articles","previous_headings":"Simple usage example","what":"Built-in plotting","title":"Simple usage","text":"plot results sim, can call sim$plot():  (plot doesn’t show looks stupendously ugly, please see troubleshooting section readme.) plot just results disease module, can call plot() disease:","code":"sim$plot() sim$diseases$sir$plot()"},{"path":"https://r.starsim.org/articles/simple.html","id":"custom-plotting","dir":"Articles","previous_headings":"Simple usage example","what":"Custom plotting","title":"Simple usage","text":"Eventually, going want custom plotting. easiest way export results dataframe, plot usually . example:","code":"library(ggplot2) df <- sim$results$sir$to_df()  ggplot(df, aes(timevec)) +    geom_line(aes(y = n_susceptible, colour = \"Susceptible\")) +    geom_line(aes(y = n_infected, colour = \"Infected\")) +   geom_line(aes(y = n_recovered, colour = \"Recovered\"))"},{"path":"https://r.starsim.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cliff Kerr. Author, maintainer. Robyn Stuart. Author. Romesh Abeysuriya. Author. Daniel Klein. Author.","code":""},{"path":"https://r.starsim.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kerr C, Stuart R, Abeysuriya R, Klein D (2024). starsim: R Interface Starsim. R package version 1.0.0, https://r.starsim.org/.","code":"@Manual{,   title = {starsim: An R Interface to Starsim},   author = {Cliff Kerr and Robyn Stuart and Romesh Abeysuriya and Daniel Klein},   year = {2024},   note = {R package version 1.0.0},   url = {https://r.starsim.org/}, }"},{"path":"https://r.starsim.org/index.html","id":"r-starsim","dir":"","previous_headings":"","what":"An R Interface to Starsim","title":"An R Interface to Starsim","text":"Starsim framework modeling spread diseases among agents via dynamic transmission networks. R-Starsim wrapper facilitates usage Starsim R. uses reticulate communicate Python R.","code":""},{"path":"https://r.starsim.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Interface to Starsim","text":"R-Starsim released CRAN future, now can installed via GitHub: already reticulate Python environment set , R-Starsim try make one (downloading Miniconda, creating r-reticulate environment, activating ). want reinstall Starsim (e.g. update version), can use: already Starsim installed Python (specifically conda) environment, can skip installation proceed directly using Starsim R. environment ’ve installed Starsim called starsim_env, can start using Starsim : ’ve installed base conda environment, can simply use load_starsim(\"base\").","code":"# install.packages(\"devtools\") devtools::install_github(\"starsimhub/rstarsim\") library(starsim) init_starsim() library(starsim) reinstall_starsim() library(starsim) load_starsim(\"starsim_env\")"},{"path":"https://r.starsim.org/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"An R Interface to Starsim","text":"Starsim Python functions classes available R. Python, usage typically import starsim ss. emulate behavior R, Starsim made available variable ss, e.g. sim = ss.Sim() Python becomes sim <- ss$Sim() R. addition, major Starsim classes (Sim, Network, Disease, etc.) imported directly R namespace (e.g. sim <- Sim() also works).","code":""},{"path":"https://r.starsim.org/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"An R Interface to Starsim","text":"","code":"# Load Starsim library(starsim) load_starsim()  # Set the simulation parameters pars <- list(     n_agents = 10000,     birth_rate = 20,     death_rate = 15,     networks = list(         type = 'randomnet',         n_contacts = 4     ),     diseases = list(         type = 'sir',         dur_inf = 10,         beta = 0.1     ) )  # Create, run, and plot the simulation sim <- ss$Sim(pars) sim$run() sim$diseases$sir$plot()"},{"path":[]},{"path":"https://r.starsim.org/index.html","id":"installation-1","dir":"","previous_headings":"Troubleshooting","what":"Installation","title":"An R Interface to Starsim","text":"init_starsim() fails, try creating Python environment (via conda miniconda), installing Starsim manually, calling load_starsim() argument. example, custom conda environment called r-starsim, use:","code":"library(starsim) load_starsim(\"r-starsim\")"},{"path":"https://r.starsim.org/index.html","id":"plotting","dir":"","previous_headings":"Troubleshooting","what":"Plotting","title":"An R Interface to Starsim","text":"plots don’t appear, try plt$show() calling plot(), set ss$options(reticulate=True) plotting. plots don’t appear cause RStudio crash, either set backend Agg (Tools > General Options > General > Graphics > Backend), call X11() somewhere script calling plot(). plots appear scaling wrong (e.g. text colliding), can either () zoom RStudio (changes inferred scaling factor), (b) change default font size e.g. sc$options(fontsize=6) (note sc = Sciris rather ss = Starsim). else fails, plotting seems work better VS Code RStudio.","code":""},{"path":"https://r.starsim.org/index.html","id":"other-issues","dir":"","previous_headings":"Troubleshooting","what":"Other issues","title":"An R Interface to Starsim","text":"Questions? Comments? Bugs? Please open issue email us help.","code":""},{"path":"https://r.starsim.org/reference/init_starsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Starsim — init_starsim","title":"Initialize Starsim — init_starsim","text":"Perform steps needed initialize Starsim: install Miniconda, create virtual environment (\"r-reticulate\"), install Starsim ","code":""},{"path":"https://r.starsim.org/reference/init_starsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Starsim — init_starsim","text":"","code":"init_starsim(..., envname = \"r-reticulate\", required = FALSE)"},{"path":"https://r.starsim.org/reference/init_starsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Starsim — init_starsim","text":"null","code":""},{"path":"https://r.starsim.org/reference/init_starsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Starsim — init_starsim","text":"","code":"if (FALSE) { # \\dontrun{ init_starsim() } # }"},{"path":"https://r.starsim.org/reference/load_starsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Starsim — load_starsim","title":"Load Starsim — load_starsim","text":"Load components Starsim environment, including: ss (Starsim functionality); NumPy (np), pandas (pd), Sciris (sc), Matplotlib (plt), additional Python functionality; core Starsim classes (e.g. Sim, Disease). installation, function needs called R-Starsim; everything else accessed via ss.","code":""},{"path":"https://r.starsim.org/reference/load_starsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Starsim — load_starsim","text":"","code":"load_starsim(envname = \"r-reticulate\", required = FALSE)"},{"path":"https://r.starsim.org/reference/load_starsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Starsim — load_starsim","text":"null","code":""},{"path":"https://r.starsim.org/reference/load_starsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Starsim — load_starsim","text":"","code":"if (FALSE) { # \\dontrun{ load_starsim() sim <- ss$Sim(diseases='sis', networks='random') sim$run() } # }"},{"path":"https://r.starsim.org/reference/reinstall_starsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Reinstall Starsim — reinstall_starsim","title":"Reinstall Starsim — reinstall_starsim","text":"Reinstalls Starsim current environment (\"r-reticulate\" default)","code":""},{"path":"https://r.starsim.org/reference/reinstall_starsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reinstall Starsim — reinstall_starsim","text":"","code":"reinstall_starsim(..., envname = \"r-reticulate\")"},{"path":"https://r.starsim.org/reference/reinstall_starsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reinstall Starsim — reinstall_starsim","text":"null","code":""},{"path":"https://r.starsim.org/reference/reinstall_starsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reinstall Starsim — reinstall_starsim","text":"","code":"if (FALSE) { # \\dontrun{ reinstall_starsim() } # }"}]
